{"version":3,"sources":["components/TodoTemplate.js","TodoContext.js","components/TodoHead.js","components/TodoItem.js","components/TodoList.js","components/TodoCreate.js","App.js","index.js"],"names":["TodoTemplateBlock","styled","div","TodoTemplate","children","initialTodos","id","text","done","todoReducer","state","action","type","concat","todo","map","filter","Error","TodoStateContext","createContext","TodoDispatchContext","TodoNextIdContext","TodoProvider","useReducer","dispatch","nextId","useRef","Provider","value","useTodoState","useContext","useTodoDispatch","TodoHeadBlock","TodoHead","undoneTasks","today","Date","dateString","toLocaleDateString","year","month","day","dayName","weekday","className","length","Remove","TodoItemBlock","CheckCircle","props","css","Text","TodoItem","onClick","React","memo","TodoListBlock","TodoList","todos","CircleButton","button","open","InsertFormPositioner","InsertForm","form","Input","input","TodoCreate","useState","setOpen","setValue","useTodoNextId","onSubmit","e","preventDefault","current","autoFocus","placeholder","onChange","target","GlobalStyle","createGlobalStyle","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.6e8b00ac.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst TodoTemplateBlock = styled.div`\n\twidth: 512px;\n\theight: 768px;\n\n\tposition: relative;\n\tbackground: #ffffff;\n\tborder-radius: 16px;\n\tbox-shadow: 0 0 8px 0 rgba(0, 0, 0, 0.04);\n\tmargin: 0 auto;\n\n\tmargin-top: 96px;\n\tmargin-bottom: 32px;\n\tdisplay: flex;\n\tflex-direction: column;\n`;\n\nfunction TodoTemplate({ children }) {\n\treturn <TodoTemplateBlock>{children}</TodoTemplateBlock>;\n}\n\nexport default TodoTemplate;\n","import React, { useReducer, createContext, useContext, useRef } from \"react\";\n\nconst initialTodos = [\n  {\n    id: 1,\n    text: \"할 일을 추가하고 완료되면 체크박스를 클릭하세요!\",\n    done: false\n  }\n];\n\nfunction todoReducer(state, action) {\n  switch (action.type) {\n    case \"CREATE\":\n      return state.concat(action.todo);\n    case \"TOGGLE\":\n      return state.map((todo) =>\n        todo.id === action.id ? { ...todo, done: !todo.done } : todo\n      );\n    case \"REMOVE\":\n      return state.filter((todo) => todo.id !== action.id);\n    default:\n      throw new Error(`Unhandled action type: ${action.type}`);\n  }\n}\n\nconst TodoStateContext = createContext();\nconst TodoDispatchContext = createContext();\nconst TodoNextIdContext = createContext();\n\nexport function TodoProvider({ children }) {\n  const [state, dispatch] = useReducer(todoReducer, initialTodos);\n  const nextId = useRef(2);\n\n  return (\n    <TodoStateContext.Provider value={state}>\n      <TodoDispatchContext.Provider value={dispatch}>\n        <TodoNextIdContext.Provider value={nextId}>\n          {children}\n        </TodoNextIdContext.Provider>\n      </TodoDispatchContext.Provider>\n    </TodoStateContext.Provider>\n  );\n}\n\nexport function useTodoState() {\n  const context = useContext(TodoStateContext);\n  if (!context) {\n    throw new Error(\"Cannot find TodoProvider\");\n  }\n  return useContext(TodoStateContext);\n}\n\nexport function useTodoDispatch() {\n  const context = useContext(TodoDispatchContext);\n  if (!context) {\n    throw new Error(\"Cannot find TodoProvider\");\n  }\n  return useContext(TodoDispatchContext);\n}\n\nexport function useTodoNextId() {\n  const context = useContext(TodoNextIdContext);\n  if (!context) {\n    throw new Error(\"Cannot find TodoProvider\");\n  }\n  return useContext(TodoNextIdContext);\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useTodoState } from '../TodoContext';\n\nconst TodoHeadBlock = styled.div`\n\tpadding: 48px 32px 32px 24px;\n\tborder-bottom: 1px solid #e9ecef;\n\th1 {\n\t\tmargin: 0;\n\t\tfont-size: 36px;\n\t\tcolor: #343a40;\n\t}\n\t.day {\n\t\tmargin-top: 4px;\n\t\tcolor: #868e96;\n\t\tfont-size: 21px;\n\t}\n\t.tasks-left {\n\t\tcolor: #20c997;\n\t\tfont-size: 18px;\n\t\tmargin-top: 40px;\n\t\tfont-weight: bold;\n\t}\n`;\n\nfunction TodoHead() {\n\tconst todos = useTodoState();\n\tconst undoneTasks = todos.filter((todo) => !todo.done);\n\n\tconst today = new Date();\n\tconst dateString = today.toLocaleDateString('ko-KR', {\n\t\tyear: 'numeric',\n\t\tmonth: 'long',\n\t\tday: 'numeric'\n\t});\n\n\tconst dayName = today.toLocaleDateString('ko-KR', { weekday: 'long' });\n\n\treturn (\n\t\t<TodoHeadBlock>\n\t\t\t<h1>{dateString}</h1>\n\t\t\t<div className=\"day\">{dayName}</div>\n\t\t\t<div className=\"tasks-left\">{undoneTasks.length}개의 할 일이 남음</div>\n\t\t</TodoHeadBlock>\n\t);\n}\n\nexport default TodoHead;\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { MdDone, MdDelete } from \"react-icons/md\";\nimport { useTodoDispatch } from \"../TodoContext\";\n\nconst Remove = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #dee2e6;\n  font-size: 24px;\n  cursor: pointer;\n  &:hover {\n    color: #ff6b6b;\n  }\n  display: none;\n`;\n\nconst TodoItemBlock = styled.div`\n  display: flex;\n  align-items: center;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  &:hover {\n    ${Remove} {\n      display: initial;\n    }\n  }\n`;\n\nconst CheckCircle = styled.div`\n  width: 32px;\n  height: 32px;\n  border-radius: 16px;\n  border: 1px solid #ced4da;\n  font-size: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 20px;\n  cursor: pointer;\n  ${(props) =>\n    props.done &&\n    css`\n      border: 1px solid #38d9a9;\n      color: #38d9a9;\n    `}\n`;\n\nconst Text = styled.div`\n  flex: 1;\n  font-size: 21px;\n  color: #495057;\n  ${(props) =>\n    props.done &&\n    css`\n      color: #ced4da;\n    `}\n`;\n\nfunction TodoItem({ id, done, text }) {\n  const dispatch = useTodoDispatch();\n  const onToggle = () => dispatch({ type: \"TOGGLE\", id });\n  const onRemove = () => dispatch({ type: \"REMOVE\", id });\n  return (\n    <TodoItemBlock>\n      <CheckCircle done={done} onClick={onToggle}>\n        {done && <MdDone />}\n      </CheckCircle>\n      <Text done={done}>{text}</Text>\n      <Remove onClick={onRemove}>\n        <MdDelete />\n      </Remove>\n    </TodoItemBlock>\n  );\n}\n\nexport default React.memo(TodoItem);\n","import React from 'react';\nimport styled from 'styled-components';\nimport TodoItem from './TodoItem';\nimport { useTodoState } from '../TodoContext';\n\nconst TodoListBlock = styled.div`\n\tflex: 1;\n\tpadding: 20px 32px;\n\tpadding-bottom: 48px;\n\toverflow-y: auto;\n\t/* background: gray; */\n`;\n\nfunction TodoList() {\n\tconst todos = useTodoState();\n\n\treturn (\n\t\t<TodoListBlock>\n\t\t\t{todos.map((todo) => (\n\t\t\t\t<TodoItem\n\t\t\t\t\tkey={todo.id}\n\t\t\t\t\tid={todo.id}\n\t\t\t\t\ttext={todo.text}\n\t\t\t\t\tdone={todo.done}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</TodoListBlock>\n\t);\n}\n\nexport default TodoList;\n","import React, { useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { MdAdd } from 'react-icons/md';\nimport { useTodoDispatch, useTodoNextId } from '../TodoContext';\n\nconst CircleButton = styled.button`\n\tbackground: #38d9a9;\n\t&:hover {\n\t\tbackground: #63e6be;\n\t}\n\t&:active {\n\t\tbackground: #20c997;\n\t}\n\n\tz-index: 5;\n\tcursor: pointer;\n\twidth: 80px;\n\theight: 80px;\n\tdisplay: block;\n\talign-items: center;\n\tjustify-content: center;\n\tfont-size: 60px;\n\tposition: absolute;\n\tleft: 50%;\n\tbottom: 0;\n\ttransform: translate(-50px, 50px);\n\tcolor: #ffffff;\n\tborder-radius: 50%;\n\tborder: none;\n\toutline: none;\n\tdisplay: flex;\n\n\ttransition: 0.125s all ease-in;\n\t${(props) =>\n\t\tprops.open &&\n\t\tcss`\n\t\t\tbackground: #ff6b6b;\n\t\t\t&:hover {\n\t\t\t\tbackground: #ff8787;\n\t\t\t}\n\t\t\t&:active {\n\t\t\t\tbackground: #fa5252;\n\t\t\t}\n\t\t\ttransform: translate(-50%, 50%) rotate(45deg);\n\t\t`}\n`;\n\nconst InsertFormPositioner = styled.div`\n\twidth: 100%;\n\tbottom: 0;\n\tleft: 0;\n\tposition: absolute;\n`;\n\nconst InsertForm = styled.form`\n\tbackground: #f8f9fa;\n\tpadding-left: 32px;\n\tpadding-top: 32px;\n\tpadding-right: 32px;\n\tpadding-bottom: 72px;\n\n\tborder-bottom-left-radius: 16px;\n\tborder-bottom-right-radius: 16px;\n\tborder-top: 1px solid #e9ecef;\n`;\n\nconst Input = styled.input`\n\tpadding: 12px;\n\tborder-radius: 4px;\n\tborder: 1px solid #dee2e6;\n\twidth: 100%;\n\toutline: none;\n\tfont-size: 18px;\n\tbox-sizing: border-box;\n`;\n\nfunction TodoCreate() {\n\tconst [open, setOpen] = useState(false);\n\tconst [value, setValue] = useState('');\n\n\tconst dispatch = useTodoDispatch();\n\tconst nextId = useTodoNextId();\n\n\tconst onToggle = () => setOpen(!open);\n\tconst onChange = (e) => setValue(e.target.value);\n\tconst onSubmit = (e) => {\n\t\te.preventDefault(); // 새로고침 방지\n\t\tdispatch({\n\t\t\ttype: 'CREATE',\n\t\t\ttodo: {\n\t\t\t\tid: nextId.current,\n\t\t\t\ttext: value,\n\t\t\t\tdone: false\n\t\t\t}\n\t\t});\n\t\tsetValue('');\n\t\tsetOpen(false);\n\t\tnextId.current += 1;\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t{open && (\n\t\t\t\t<InsertFormPositioner>\n\t\t\t\t\t<InsertForm onSubmit={onSubmit}>\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\tplaceholder=\"할 일을 입력한 후, Enter를 누르세요!\"\n\t\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</InsertForm>\n\t\t\t\t</InsertFormPositioner>\n\t\t\t)}\n\t\t\t<CircleButton onClick={onToggle} open={open}>\n\t\t\t\t<MdAdd />\n\t\t\t</CircleButton>\n\t\t</>\n\t);\n}\n\nexport default React.memo(TodoCreate);\n","import React from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport TodoTemplate from './components/TodoTemplate';\nimport TodoHead from './components/TodoHead';\nimport TodoList from './components/TodoList';\nimport TodoCreate from './components/TodoCreate';\nimport { TodoProvider } from './TodoContext';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    background: #e0ecef;\n  }\n`;\n\nfunction App() {\n\treturn (\n\t\t<>\n\t\t\t<TodoProvider>\n\t\t\t\t<GlobalStyle />\n\t\t\t\t<TodoTemplate>\n\t\t\t\t\t<TodoHead />\n\t\t\t\t\t<TodoList />\n\t\t\t\t\t<TodoCreate />\n\t\t\t\t</TodoTemplate>\n\t\t\t</TodoProvider>\n\t\t</>\n\t);\n}\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}